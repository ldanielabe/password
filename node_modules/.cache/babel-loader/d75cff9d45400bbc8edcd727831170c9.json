{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\prueba-graphicmarket\\\\src\\\\components\\\\Form\\\\index.js\",\n    _s = $RefreshSig$();\n\n// Dependecies\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport moment from 'moment';\nimport { useForm } from \"react-hook-form\"; // Images\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormComponent(props) {\n  _s();\n\n  const [values, setValues] = React.useState({\n    password: ''\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  }; // Form\n\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    formState,\n    unregister,\n    setValue,\n    getValues,\n    reset,\n    setError,\n    clearError,\n    control,\n    watch\n  } = useForm({\n    mode: \"onBlur\",\n    reValidateMode: \"onBlur\",\n    shouldUnregister: true\n  });\n\n  const onSubmit = (data, e) => console.log(\"data\", data, e);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"name\",\n      variant: \"outlined\",\n      maxRows: 4,\n      ...register(\"name\", {\n        required: {\n          value: true,\n          message: 'Campo obligatorio'\n        },\n        maxLength: {\n          value: 50,\n          message: 'No más de 50 carácteres!'\n        },\n        minLength: {\n          value: 3,\n          message: 'Mínimo 3 carácteres'\n        },\n        pattern: {\n          value: /[a-zA-Z ]$/i,\n          message: \"No se pueden ingresar caracteres.\"\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Site URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"standard-basic\",\n      variant: \"outlined\",\n      name: \"url\",\n      ...register(\"url\", {\n        required: {\n          value: true,\n          message: 'Campo obligatorio'\n        },\n        maxLength: {\n          value: 50,\n          message: 'No más de 50 carácteres!'\n        },\n        minLength: {\n          value: 3,\n          message: 'Mínimo 3 carácteres'\n        },\n        pattern: {\n          value: /[a-zA-Z ]$/i,\n          message: \"No se pueden ingresar caracteres.\"\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: \"myForm\",\n      variant: \"outlined\",\n      children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        id: \"\",\n        type: values.showPassword ? 'text' : 'password',\n        value: values.password,\n        onChange: handleChange('password'),\n        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"end\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"toggle password visibility\",\n            onClick: handleClickShowPassword,\n            onMouseDown: handleMouseDownPassword,\n            edge: \"end\",\n            children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 42\n            }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      children: \"Copy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Create At\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"outlined\",\n      maxRows: 4,\n      name: \"create_at\",\n      value: moment().format('YYYY-MM-DD h:mm:ss')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormComponent, \"/Jjd0Kf3dv8s9WO2D8rvuHU1Tm4=\", false, function () {\n  return [useForm];\n});\n\n_c = FormComponent;\nFormComponent.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\nexport default FormComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"sources":["C:/xampp/htdocs/prueba-graphicmarket/src/components/Form/index.js"],"names":["React","PropTypes","IconButton","OutlinedInput","InputLabel","FormControl","TextField","Visibility","VisibilityOff","InputAdornment","Button","DeleteIcon","AddIcon","moment","useForm","FormComponent","props","values","setValues","useState","password","handleChange","prop","event","target","value","handleClickShowPassword","showPassword","handleMouseDownPassword","preventDefault","register","handleSubmit","errors","formState","unregister","setValue","getValues","reset","setError","clearError","control","watch","mode","reValidateMode","shouldUnregister","onSubmit","data","e","console","log","required","message","maxLength","minLength","pattern","format","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["// Dependecies\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport moment from 'moment';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// Images\r\n\r\nfunction FormComponent(props) {\r\n  \r\n  const [values, setValues] = React.useState({\r\n    password: ''\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n // Form\r\n\r\n const {\r\n  register,\r\n  handleSubmit,\r\n  errors,\r\n  formState,\r\n  unregister,\r\n  setValue,\r\n  getValues,\r\n  reset,\r\n  setError,\r\n  clearError,\r\n  control, \r\n  watch\r\n} = useForm({\r\n  mode: \"onBlur\",\r\n  reValidateMode: \"onBlur\",\r\n  shouldUnregister: true\r\n  });  \r\n\r\n\r\nconst onSubmit = (data, e) => console.log(\"data\", data, e);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4>Name</h4>\r\n          <TextField\r\n            name=\"name\"\r\n            variant=\"outlined\"\r\n            maxRows={4}\r\n            {...\r\n              register(\r\n              \"name\",\r\n              { required: {\r\n                  value: true, \r\n                  message: 'Campo obligatorio'\r\n                  }, \r\n              maxLength: {\r\n                  value: 50, \r\n                  message: 'No más de 50 carácteres!'\r\n                  },\r\n              minLength: {\r\n                  value: 3, \r\n                  message: 'Mínimo 3 carácteres'\r\n                  },\r\n              pattern: {\r\n                  value: /[a-zA-Z ]$/i,\r\n                  message: \"No se pueden ingresar caracteres.\"\r\n              }})\r\n            }\r\n          />\r\n          {/* {errors.name && <p style={{color: \"red\"}}>{errors.name.message}</p>} */}\r\n\r\n          <h4>Site URL</h4>\r\n          <TextField \r\n          id=\"standard-basic\" \r\n          variant=\"outlined\"\r\n          name=\"url\"\r\n          {...\r\n            register(\r\n            \"url\",\r\n            { required: {\r\n                value: true, \r\n                message: 'Campo obligatorio'\r\n                }, \r\n            maxLength: {\r\n                value: 50, \r\n                message: 'No más de 50 carácteres!'\r\n                },\r\n            minLength: {\r\n                value: 3, \r\n                message: 'Mínimo 3 carácteres'\r\n                },\r\n            pattern: {\r\n                value: /[a-zA-Z ]$/i,\r\n                message: \"No se pueden ingresar caracteres.\"\r\n            }})\r\n          }\r\n          />\r\n\r\n          <h4>Password</h4>\r\n          <FormControl className=\"myForm\" variant=\"outlined\">\r\n          <OutlinedInput\r\n            id=\"\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                  edge=\"end\"\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n\r\n        <Button variant=\"outlined\">Generate</Button>\r\n        <Button variant=\"outlined\">Copy</Button>\r\n\r\n        <h4>Create At</h4>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            maxRows={4}\r\n            name=\"create_at\"\r\n            value={moment().format('YYYY-MM-DD h:mm:ss')}\r\n          />\r\n\r\n        {/* <Button size=\"medium\" className=\"\" variant=\"outlined\" type=\"submit\">\r\n          Crear\r\n        </Button> */}\r\n        <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nFormComponent.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n\r\n};\r\n\r\n\r\nexport default FormComponent;\r\n"]},"metadata":{},"sourceType":"module"}