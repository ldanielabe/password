{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\prueba-graphicmarket\\\\src\\\\views\\\\Password.js\",\n    _s = $RefreshSig$();\n\n// Dependecies\nimport React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useForm } from \"react-hook-form\";\nimport moment from 'moment'; // Components\n\nimport Card from '../components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Password(props) {\n  _s();\n\n  const [values, setValues] = React.useState({\n    password: ''\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  }; //Form\n  // const onSubmit = (data) => alert(JSON.stringify(data));\n  // const {\n  //   register,\n  //   handleSubmit,\n  //   errors,\n  //   formState,\n  //   unregister,\n  //   setValue,\n  //   getValues,\n  //   reset,\n  //   setError,\n  //   clearError,\n  //   control, \n  //   watch\n  // } = useForm({\n  //   mode: \"onBlur\",\n  //   reValidateMode: \"onBlur\",\n  //   shouldUnregister: true\n  //   });  \n\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(\"llegue\"); // console.log(watch(\"name\")); // watch input value by passing the name of it\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n            placeholder: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"add\",\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          account: \"Hola\",\n          user: \"Daniela\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          children: \"Formulario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"name\",\n            variant: \"outlined\",\n            maxRows: 4,\n            ref: register(\"name\", {\n              required: {\n                value: true,\n                message: 'Campo obligatorio'\n              },\n              maxLength: {\n                value: 50,\n                message: 'No más de 50 carácteres!'\n              },\n              minLength: {\n                value: 3,\n                message: 'Mínimo 3 carácteres'\n              },\n              pattern: {\n                value: /[a-zA-Z ]$/i,\n                message: \"No se pueden ingresar caracteres.\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Site URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            variant: \"outlined\",\n            name: \"url\",\n            ref: register(\"url\", {\n              required: {\n                value: true,\n                message: 'Campo obligatorio'\n              },\n              maxLength: {\n                value: 50,\n                message: 'No más de 50 carácteres!'\n              },\n              minLength: {\n                value: 3,\n                message: 'Mínimo 3 carácteres'\n              },\n              pattern: {\n                value: /[a-zA-Z ]$/i,\n                message: \"No se pueden ingresar caracteres.\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"myForm\",\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"\",\n              type: values.showPassword ? 'text' : 'password',\n              value: values.password,\n              onChange: handleChange('password'),\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"toggle password visibility\",\n                  onClick: handleClickShowPassword,\n                  onMouseDown: handleMouseDownPassword,\n                  edge: \"end\",\n                  children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 42\n                  }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 59\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Create At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            maxRows: 4,\n            name: \"create_at\",\n            value: moment().format('YYYY-MM-DD h:mm:ss'),\n            ref: register(\"FIELD_NAME\", {\n              required: {\n                value: true,\n                message: 'Campo obligatorio'\n              },\n              maxLength: {\n                value: 50,\n                message: 'No más de 50 carácteres!'\n              },\n              minLength: {\n                value: 3,\n                message: 'Mínimo 3 carácteres'\n              },\n              pattern: {\n                value: /[a-zA-Z ]$/i,\n                message: \"No se pueden ingresar caracteres.\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"delete\",\n          className: \"\",\n          variant: \"outlined\",\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Password, \"JwGUOCy97CQ/UTY615UwFGmmqMY=\", false, function () {\n  return [useForm];\n});\n\n_c = Password;\nexport default Password;\n\nvar _c;\n\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"sources":["C:/xampp/htdocs/prueba-graphicmarket/src/views/Password.js"],"names":["React","Container","Paper","Grid","SearchIcon","InputBase","IconButton","OutlinedInput","InputLabel","FormControl","TextField","Visibility","VisibilityOff","InputAdornment","Button","DeleteIcon","AddIcon","useForm","moment","Card","Password","props","values","setValues","useState","password","handleChange","prop","event","target","value","handleClickShowPassword","showPassword","handleMouseDownPassword","preventDefault","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","required","message","maxLength","minLength","pattern","format"],"mappings":"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","sourcesContent":["// Dependecies\r\nimport React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useForm } from \"react-hook-form\";\r\nimport moment from 'moment';\r\n\r\n// Components\r\nimport Card from '../components/Card';\r\n\r\nfunction Password(props) {\r\n  const [values, setValues] = React.useState({\r\n    password: ''\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  //Form\r\n  // const onSubmit = (data) => alert(JSON.stringify(data));\r\n\r\n  // const {\r\n  //   register,\r\n  //   handleSubmit,\r\n  //   errors,\r\n  //   formState,\r\n  //   unregister,\r\n  //   setValue,\r\n  //   getValues,\r\n  //   reset,\r\n  //   setError,\r\n  //   clearError,\r\n  //   control, \r\n  //   watch\r\n  // } = useForm({\r\n  //   mode: \"onBlur\",\r\n  //   reValidateMode: \"onBlur\",\r\n  //   shouldUnregister: true\r\n  //   });  \r\n\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n    const onSubmit = data => console.log(\"llegue\");\r\n\r\n    // console.log(watch(\"name\")); // watch input value by passing the name of it\r\n\r\n\r\n  return (\r\n    <Container >\r\n    <Grid container spacing={3}>\r\n      <Grid item xs>\r\n        <Grid>\r\n            <div>\r\n            <SearchIcon />\r\n            </div>\r\n            <InputBase placeholder=\"Search\" />\r\n        </Grid>\r\n\r\n        <IconButton aria-label=\"add\" className=\"\">\r\n          <AddIcon fontSize=\"small\" />\r\n        </IconButton>\r\n\r\n        <Card account=\"Hola\" user=\"Daniela\" />\r\n\r\n      </Grid>\r\n\r\n      <Grid item xs={8}>\r\n        <Paper >Formulario</Paper>\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h4>Name</h4>\r\n          <TextField\r\n            name=\"name\"\r\n            variant=\"outlined\"\r\n            maxRows={4}\r\n            ref={\r\n              register(\r\n              \"name\",\r\n              { required: {\r\n                  value: true, \r\n                  message: 'Campo obligatorio'\r\n                  }, \r\n              maxLength: {\r\n                  value: 50, \r\n                  message: 'No más de 50 carácteres!'\r\n                  },\r\n              minLength: {\r\n                  value: 3, \r\n                  message: 'Mínimo 3 carácteres'\r\n                  },\r\n              pattern: {\r\n                  value: /[a-zA-Z ]$/i,\r\n                  message: \"No se pueden ingresar caracteres.\"\r\n              }})\r\n            }\r\n          />\r\n          {/* {errors.name && <p style={{color: \"red\"}}>{errors.name.message}</p>} */}\r\n\r\n          <h4>Site URL</h4>\r\n          <TextField \r\n          id=\"standard-basic\" \r\n          variant=\"outlined\"\r\n          name=\"url\"\r\n          ref={\r\n            register(\r\n            \"url\",\r\n            { required: {\r\n                value: true, \r\n                message: 'Campo obligatorio'\r\n                }, \r\n            maxLength: {\r\n                value: 50, \r\n                message: 'No más de 50 carácteres!'\r\n                },\r\n            minLength: {\r\n                value: 3, \r\n                message: 'Mínimo 3 carácteres'\r\n                },\r\n            pattern: {\r\n                value: /[a-zA-Z ]$/i,\r\n                message: \"No se pueden ingresar caracteres.\"\r\n            }})\r\n          }\r\n          />\r\n\r\n          <h4>Password</h4>\r\n          <FormControl className=\"myForm\" variant=\"outlined\">\r\n          <OutlinedInput\r\n            id=\"\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            value={values.password}\r\n            onChange={handleChange('password')}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                  edge=\"end\"\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n\r\n        <Button variant=\"outlined\">Generate</Button>\r\n        <Button variant=\"outlined\">Copy</Button>\r\n\r\n        <h4>Create At</h4>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            maxRows={4}\r\n            name=\"create_at\"\r\n            value={moment().format('YYYY-MM-DD h:mm:ss')}\r\n            ref={\r\n              register(\r\n              \"FIELD_NAME\",\r\n              { required: {\r\n                  value: true, \r\n                  message: 'Campo obligatorio'\r\n                  }, \r\n              maxLength: {\r\n                  value: 50, \r\n                  message: 'No más de 50 carácteres!'\r\n                  },\r\n              minLength: {\r\n                  value: 3, \r\n                  message: 'Mínimo 3 carácteres'\r\n                  },\r\n              pattern: {\r\n                  value: /[a-zA-Z ]$/i,\r\n                  message: \"No se pueden ingresar caracteres.\"\r\n              }})\r\n            }\r\n          />\r\n\r\n        {/* <Button size=\"medium\" className=\"\" variant=\"outlined\" type=\"submit\">\r\n          Crear\r\n        </Button> */}\r\n        <input type=\"submit\" />\r\n        </form>\r\n\r\n        <IconButton aria-label=\"delete\" className=\"\" variant=\"outlined\">\r\n          <DeleteIcon fontSize=\"small\" />\r\n        </IconButton>\r\n\r\n        \r\n      </Grid>\r\n\r\n    </Grid>\r\n  </Container>\r\n  );\r\n}\r\n \r\nexport default Password;\r\n"]},"metadata":{},"sourceType":"module"}